---
title: "R_HW3_PavlovaDN"
author: "Pavlova"
format: html
editor: visual
---

###ДОМАШНЯЯ РАБОТА №3

###### В первых двух заданиях вам необходимо посчитать описательные статистики. Для количественной переменной рассчитайте число наблюдений, среднее, стандартное отклонение, 1-й и 3-й квартили, минимум и максимум. Для категориальной переменной определите абсолютную и относительные частоты.
```{r}
# используемые библиотеки
library(readxl)
library(tidyverse)
library(dplyr)
library(ggplot2)
```

```{r}
# загрузка и чтение датасета
pima <- read_excel(path = "C:/Users/admin/Desktop/DS/R/hw3/pima.xlsx")
head(pima)
```
### Рассчитайте описательные статистики для переменных glucose, pressure, mass. — 1 балл

```{r}
glucose_summarise <- pima %>%
        summarise(n = n(),
                mean = mean(mass),
                sd = sd(mass),
                first_quart = quantile(mass, probs = 0.25),
                third_quart = quantile(mass, probs = 0.75),
                min = min(mass),
                max = max(mass)
                )
glucose_summarise
```
```{r}
pressure_summarise <- pima %>%
        summarise(n = n(),
                mean = mean(mass),
                sd = sd(mass),
                first_quart = quantile(mass, probs = 0.25),
                third_quart = quantile(mass, probs = 0.75),
                min = min(mass),
                max = max(mass)
                )
pressure_summarise
```
```{r}
mass_summarise <- pima %>%
        summarise(n = n(),
                mean = mean(mass),
                sd = sd(mass),
                first_quart = quantile(mass, probs = 0.25),
                third_quart = quantile(mass, probs = 0.75),
                min = min(mass),
                max = max(mass)
                )
mass_summarise
```
### Рассчитайте описательную статистику для переменной diabetes. Создайте на основе переменной age новую переменную age_group, которая будет отражать следующие возрастные группы: 21–35, 36–49 и 50+. Посчитайте описательную статистику для новой переменной. — 1 балл

```{r}
# Для переменной 'diabetes'
pima$diabetes <- factor(pima$diabetes)  # преобразуем в категориальную переменную
diabetes_stats <- pima %>%
  count(diabetes) %>%
  mutate(Percentage = n / sum(n) * 100)

# Создание новой переменной 'age_group'
pima <- pima %>%
  mutate(age_group = case_when(
    age >= 21 & age <= 35 ~ "21–35",
    age >= 36 & age <= 49 ~ "36–49",
    age >= 50 ~ "50+",
    TRUE ~ NA_character_ # Для случаев, не попадающих ни в одну группу
  ))

# Описательная статистика для категориальной переменной 'age_group'
age_group_stats <- pima %>%
  group_by(age_group) %>%
  summarise(
    Count = n(),
    Percentage = n() / nrow(pima) * 100
  )

# Вывод результатов
print(diabetes_stats)
print(age_group_stats)

```

### Определите 90% доверительный интервал для переменной pedigree. — 2 балла.
```{r}
conf_interval <- t.test(pima$pedigree, conf.level = 0.90)

# Вывод результата
print(conf_interval$conf.int)
```
### Постройте график плотности вероятности для переменной glucose и отметьте на нем среднее значение. Для той же переменной постройте гистограмму. Постройте два ящика с усами для значений pos и neg соответственно переменной diabetes. — 3 балла
```{r}
# Построение графика плотности вероятности для переменной glucose и отметка на нем среднего значения.
library(ggplot2)

mean_glucose <- mean(pima$glucose, na.rm = TRUE)

ggplot(pima, aes(x = glucose)) +
  geom_density(fill = "lightblue", alpha = 0.5) +
  geom_vline(xintercept = mean_glucose, color = "red", linetype = "dashed", size = 1) +
  labs(title = "График плотности вероятности для glucose", x = "Glucose", y = "Плотность") +
  annotate("text", x = mean_glucose, y = 0, label = paste("Среднее:", round(mean_glucose, 2)), hjust = 1, color = "red")

```
```{r}
# Гистограмма для glucose
ggplot(pima, aes(x = glucose)) +
  geom_histogram(binwidth = 10, fill = "skyblue", color = "black") +
  labs(title = "Гистограмма для glucose", x = "Glucose", y = "Частота")

```

```{r}
# Ящики с усами для diabetes (pos и neg)
ggplot(pima, aes(x = diabetes, y = glucose, fill = diabetes)) +
  geom_boxplot() +
  scale_fill_manual(values = c("pos" = "salmon", "neg" = "lightgreen")) +
  labs(title = "Ящики с усами для переменной glucose по категориям diabetes", x = "Diabetes", y = "Glucose")

```
### Постройте на одном графике две диаграммы рассеяния для наличия или отсутствия диабета. По оси X представьте значения обхвата трицепса, а по оси Y — массу тела. Выполните окрашивание, заливку и группирование по переменной diabetes. — 3 балла
```{r}
# так как в переменной triceps есть нули, то, например, можно заменить их средним значением
# Замена нулей на среднее значение
pima$triceps[pima$triceps == 0] <- mean(pima$triceps[pima$triceps != 0])

```

```{r}
#постоение диаграмм рассеяния
ggplot(pima, aes(x = triceps, y = mass)) +
  geom_point(aes(color = diabetes), alpha = 0.7) +  # Окрашиваем точки в зависимости от наличия диабета
  facet_grid(~ diabetes) +  # Разделяем график на панели по наличию диабета
  scale_color_manual(values = c("pos" = "orange", "neg" = "blue")) +  # Настраиваем цвета
  labs(title = "Взаимосвязь между обхватом трицепса и массой тела с учетом диабета",
       x = "Обхват трицепса",
       y = "Масса тела",
       color = "Диабет") +
  theme_minimal()  # Минимальная тема оформления

```








































